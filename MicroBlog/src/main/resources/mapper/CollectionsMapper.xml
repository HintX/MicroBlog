<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="microBlog.mapper.CollectionsMapper">
	<resultMap id="resultCollections" type="microBlog.entity.Collections" >  
       <result column="collections_id" property="id"></result> 
       <result column="collections_time" property="time"></result> 
       <association property="user" javaType="microBlog.entity.User" >  
            <id column="user_id" property="id"/>  
            <result column="user_email" property="email"/>    
            <result column="user_nickName" property="nickName"/>    
       		<result column="user_time" property="time"/>    
       		<result column="user_status" property="status"/>    
       </association> 
       <association property="messages" javaType="microBlog.entity.Messages" >  
           <id column="messages_id" property="id"/>  
           <result column="messages_info" property="info"></result> 
	       <result column="messages_time" property="time"></result>
	       <result column="messages_collectnum" property="collectnum"></result>
	       <result column="messages_commentnum" property="commentnum"></result> 
	       <result column="messages_agreenum" property="agreenum"></result> 
	       <result column="messages_state" property="state"></result> 
       </association> 
    </resultMap>
    <insert id="add" keyProperty="id" useGeneratedKeys="true" parameterType="microBlog.entity.Collections">
    	insert into Collections(user_id,messages_id,collections_time) values(#{user.id},#{messages.id},NOW())
    </insert>
    <delete id="delete">
    	DELETE FROM Collections WHERE collctions_id = #{id} 
    </delete>
    <select id="getAll" resultMap="resultCollections">
    	SELECT c.*,
		u.user_id AS user_id,u.user_email AS user_email,u.user_nickName AS user_nickName,u.user_time AS user_time,u.user_status AS user_status,
		m.messages_id AS messages_id,m.messages_info AS messages_info,m.messages_time AS messages_time,m.messages_collectnum AS messages_collectnum,m.messages_commentnum AS messages_commentnum,m.messages_agreenum AS messages_agreenum,m.messages_state AS messages_state
		FROM Collections c 
		LEFT JOIN `user` u ON(c.user_id = u.user_id)
		LEFT JOIN `Messages` m ON(c.messages_id = m.messages_id)
		WHERE  m.messages_state = 0
    </select>
</mapper>
  	